{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-row\"\n};\nconst _hoisted_2 = {\n  class: \"form-group col-md-15\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\",\n  class: \"text-left\"\n}, \"Nombre de usuario:\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"form-group col-md-15\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\",\n  class: \"text-left\"\n}, \"Contraseña:\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"form-row\"\n};\nconst _hoisted_7 = {\n  class: \"form-group col-md-15\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"error-message\"\n};\nconst _hoisted_9 = {\n  key: 2,\n  id: \"label_token\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [!$data.requestComplete ? (_openBlock(), _createElementBlock(\"form\", {\n    key: 0,\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => _ctx.login && _ctx.login(...args), [\"prevent\"])),\n    class: \"container\"\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]])]), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    type: \"submit\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.getTokens && $options.getTokens(...args))\n  }, \"Iniciar sesión\")])])])], 32 /* HYDRATE_EVENTS */)) : _createCommentVNode(\"v-if\", true), $data.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Añadir un <label> para mostrar el token \"), $data.requestComplete ? (_openBlock(), _createElementBlock(\"label\", _hoisted_9, \"Token: \" + _toDisplayString($data.token), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EAESA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAsB;gCAC/BC,oBAA+D;EAAxDC,GAAG,EAAC,OAAO;EAACF,KAAK,EAAC;GAAY,oBAAkB;;EAIpDA,KAAK,EAAC;AAAsB;gCAC/BC,oBAA2D;EAApDC,GAAG,EAAC,UAAU;EAACF,KAAK,EAAC;GAAY,aAAW;;EAGhDA,KAAK,EAAC;AAAU;;EAChBA,KAAK,EAAC;AAAsB;;;EAQrBA,KAAK,EAAC;;;;EAEfG,EAAE,EAAC;;;8DAtB6CC,qBAAe,kBAAtEC,oBAkBO;;IAlBAC,QAAM,wDAAUC,iCAAK;IAAEP,KAAK,EAAC;MAClCC,oBAgBI,OAhBJO,UAgBI,GAfFP,oBAGM,OAHNQ,UAGM,GAFJC,UAA+D,kBAC/DT,oBAAmD;IAA5CE,EAAE,EAAC,OAAO;IAACQ,IAAI,EAAC,OAAO;+DAAUP,cAAQ;iDAARA,cAAQ,OAGlDH,oBAGM,OAHNW,UAGM,GAFJC,UAA2D,kBAC3DZ,oBAA0D;IAAnDE,EAAE,EAAC,UAAU;IAACQ,IAAI,EAAC,UAAU;+DAAUP,cAAQ;iDAARA,cAAQ,OAExDH,oBAKI,OALJa,UAKI,GAJJb,oBAGM,OAHNc,UAGM,GAFJd,oBACiB;IADTU,IAAI,EAAC,QAAQ;IAAEK,OAAK,yCAAEC,iDAAS;KAAG,gBAClC,yEAMLb,WAAK,kBAAdC,oBAAqD,KAArDa,UAAqD,mBAAZd,WAAK,uDAC9Ce,gEAAgD,EAClBf,qBAAe,kBAA7CC,oBAAyE,SAAzEe,UAAyE,EAA1B,SAAO,oBAAGhB,WAAK","names":["class","_createElementVNode","for","id","$data","_createElementBlock","onSubmit","_ctx","_hoisted_1","_hoisted_2","_hoisted_3","type","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","onClick","$options","_hoisted_8","_createCommentVNode","_hoisted_9"],"sourceRoot":"","sources":["/home/nicolas/Downloads/repos/Iw3-FInal/vue-frontend/src/components/Login.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"login\" class=\"container\" v-if=\"!requestComplete\">\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-15\">\n        <label for=\"email\" class=\"text-left\">Nombre de usuario:</label>\n        <input id=\"email\" type=\"email\" v-model=\"username\"/>\n      </div>\n\n      <div class=\"form-group col-md-15\">\n        <label for=\"password\" class=\"text-left\">Contraseña:</label>\n        <input id=\"password\" type=\"password\" v-model=\"password\" />\n      </div>\n      <div class=\"form-row\">\n      <div class=\"form-group col-md-15\">\n        <button type=\"submit\" @click=\"getTokens\" >Iniciar\n          sesión</button>\n      </div>\n    </div>\n  </div>\n  </form>\n\n  <p v-if=\"error\" class=\"error-message\">{{ error }}</p>\n  <!-- Añadir un <label> para mostrar el token -->\n  <label id=\"label_token\" v-if=\"requestComplete\">Token: {{ token }}</label>\n</template>\n\n\n\n\n\n<script>\nimport LoginService from '@/services/LoginService';\n\n\nexport default {\n  name: 'LoginForm',\n  data() {\n    return {\n      username: '',\n      password: '',\n      token: \"\",\n      requestComplete: false,\n      error: null\n    };\n  },\n  methods: {\n    async getTokens() {\n      try {\n        if (!this.username || !this.password) {\n          this.error = 'Debes ingresar un nombre de usuario y una contraseña';\n          return;\n        }\n\n        this.token = await LoginService.getTokens(this.username, this.password);\n\n        this.requestComplete = true;\n\n        return this.token\n      } catch (error) {\n        this.error = error;\n\n        console.error(error);\n      }\n    }\n  }\n};\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}