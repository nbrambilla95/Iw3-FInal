{"ast":null,"code":"import _defineProperty from \"/home/nicolas/Downloads/repos/Iw3-FInal/vue-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport axios from 'axios';\nconst LOGIN_API_BASE_URL = 'http://localhost:8080/api/v1/login';\nfunction axiosTest(pUsername, pPassword) {\n  // create a promise for the axios request\n  const promise = axios.post(LOGIN_API_BASE_URL, null, {\n    params: {\n      username: pUsername,\n      password: pPassword\n    }\n  });\n\n  // using .then, create a new promise which extracts the data\n  const dataPromise = promise.then(response => response.data);\n\n  // return it\n  return dataPromise;\n}\naxiosTest().then(data => {\n  response.json({\n    message: 'Request received!',\n    data\n  });\n}).catch(err => console.log(err));\nclass TokenService {\n  constructor() {\n    _defineProperty(this, \"dataPromise\", promise.then(response => response.data));\n  }\n  getTokens(pUsername, pPassword) {\n    const promise = axios.post(LOGIN_API_BASE_URL, null, {\n      params: {\n        username: pUsername,\n        password: pPassword\n      }\n    });\n  }\n}\nexport default new TokenService();","map":{"version":3,"names":["axios","LOGIN_API_BASE_URL","axiosTest","pUsername","pPassword","promise","post","params","username","password","dataPromise","then","response","data","json","message","catch","err","console","log","TokenService","getTokens"],"sources":["/home/nicolas/Downloads/repos/Iw3-FInal/vue-frontend/src/services/TokenService.js"],"sourcesContent":["import axios from 'axios'\n\nconst LOGIN_API_BASE_URL = 'http://localhost:8080/api/v1/login'\n\n\nfunction axiosTest(pUsername,pPassword) {\n    // create a promise for the axios request\n    const promise = axios.post(LOGIN_API_BASE_URL, null, {\n        params: {\n            username: pUsername,\n            password: pPassword\n        }\n    });\n\n    // using .then, create a new promise which extracts the data\n    const dataPromise = promise.then((response) => response.data)\n\n    // return it\n    return dataPromise\n}\n\naxiosTest()\n    .then(data => {\n        response.json({ message: 'Request received!', data })\n    })\n    .catch(err => console.log(err))\n\n\nclass TokenService {\n    getTokens(pUsername, pPassword) {\n        const promise = axios.post(LOGIN_API_BASE_URL, null, {\n                        params: {\n                            username: pUsername,\n                            password: pPassword\n                        }\n                    });\n                }\n        dataPromise = promise.then((response) => response.data)\n}\n\n\n\nexport default new TokenService()\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,kBAAkB,GAAG,oCAAoC;AAG/D,SAASC,SAAS,CAACC,SAAS,EAACC,SAAS,EAAE;EACpC;EACA,MAAMC,OAAO,GAAGL,KAAK,CAACM,IAAI,CAACL,kBAAkB,EAAE,IAAI,EAAE;IACjDM,MAAM,EAAE;MACJC,QAAQ,EAAEL,SAAS;MACnBM,QAAQ,EAAEL;IACd;EACJ,CAAC,CAAC;;EAEF;EACA,MAAMM,WAAW,GAAGL,OAAO,CAACM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;;EAE7D;EACA,OAAOH,WAAW;AACtB;AAEAR,SAAS,EAAE,CACNS,IAAI,CAACE,IAAI,IAAI;EACVD,QAAQ,CAACE,IAAI,CAAC;IAAEC,OAAO,EAAE,mBAAmB;IAAEF;EAAK,CAAC,CAAC;AACzD,CAAC,CAAC,CACDG,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AAGnC,MAAMG,YAAY,CAAC;EAAA;IAAA,qCASGf,OAAO,CAACM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;EAAA;EAR3DQ,SAAS,CAAClB,SAAS,EAAEC,SAAS,EAAE;IAC5B,MAAMC,OAAO,GAAGL,KAAK,CAACM,IAAI,CAACL,kBAAkB,EAAE,IAAI,EAAE;MACrCM,MAAM,EAAE;QACJC,QAAQ,EAAEL,SAAS;QACnBM,QAAQ,EAAEL;MACd;IACJ,CAAC,CAAC;EACN;AAEhB;AAIA,eAAe,IAAIgB,YAAY,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}