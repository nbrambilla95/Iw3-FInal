{"ast":null,"code":"import axios from 'axios';\nconst LOGIN_API_BASE_URL = 'http://localhost:8080/api/v1/login';\n\n// function axiosRequestToken() {\n//     // create a promise for the axios request\n//     getTokens(pUsername, pPassword) {\n//         const promise = axios.post(LOGIN_API_BASE_URL, null, {\n//             params: {\n//                 username: pUsername,\n//                 password: pPassword\n//             }\n//         });\n//     }\n\n//     // using .then, create a new promise which extracts the data\n//     const dataPromise = promise.then((response) => response.data)\n\n//     // return it\n//     return dataPromise\n// }\n\n// now we can use that data from the outside!\naxiosRequestToken().then(data => {\n  response.json({\n    message: 'Request received!',\n    data\n  });\n}).catch(err => console.log(err));\nclass TokenService {\n  getTokens(pUsername, pPassword) {\n    return axios.post(LOGIN_API_BASE_URL, null, {\n      params: {\n        username: pUsername,\n        password: pPassword\n      }\n    }).then(response => {\n      response.data;\n      // const token_object = response.headers.getAccept;\n      // return token_object;\n    });\n  }\n}\n\nexport default new TokenService();","map":{"version":3,"names":["axios","LOGIN_API_BASE_URL","axiosRequestToken","then","data","response","json","message","catch","err","console","log","TokenService","getTokens","pUsername","pPassword","post","params","username","password"],"sources":["/home/nicolas/Downloads/repos/Iw3-FInal/vue-frontend/src/services/TokenService.js"],"sourcesContent":["import axios from 'axios'\n\nconst LOGIN_API_BASE_URL = 'http://localhost:8080/api/v1/login'\n\n// function axiosRequestToken() {\n//     // create a promise for the axios request\n//     getTokens(pUsername, pPassword) {\n//         const promise = axios.post(LOGIN_API_BASE_URL, null, {\n//             params: {\n//                 username: pUsername,\n//                 password: pPassword\n//             }\n//         });\n//     }\n\n//     // using .then, create a new promise which extracts the data\n//     const dataPromise = promise.then((response) => response.data)\n\n//     // return it\n//     return dataPromise\n// }\n\n// now we can use that data from the outside!\naxiosRequestToken()\n    .then(data => {\n        response.json({ message: 'Request received!', data })\n    })\n    .catch(err => console.log(err))\n\nclass TokenService {\n    getTokens(pUsername, pPassword) {\n        return axios.post(LOGIN_API_BASE_URL, null, {\n            params: {\n                username: pUsername,\n                password: pPassword\n            }\n        }).then(response => {\n            response.data\n            // const token_object = response.headers.getAccept;\n            // return token_object;\n\n        });\n    }\n}\n\nexport default new TokenService()\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,kBAAkB,GAAG,oCAAoC;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACAC,iBAAiB,EAAE,CACdC,IAAI,CAACC,IAAI,IAAI;EACVC,QAAQ,CAACC,IAAI,CAAC;IAAEC,OAAO,EAAE,mBAAmB;IAAEH;EAAK,CAAC,CAAC;AACzD,CAAC,CAAC,CACDI,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AAEnC,MAAMG,YAAY,CAAC;EACfC,SAAS,CAACC,SAAS,EAAEC,SAAS,EAAE;IAC5B,OAAOf,KAAK,CAACgB,IAAI,CAACf,kBAAkB,EAAE,IAAI,EAAE;MACxCgB,MAAM,EAAE;QACJC,QAAQ,EAAEJ,SAAS;QACnBK,QAAQ,EAAEJ;MACd;IACJ,CAAC,CAAC,CAACZ,IAAI,CAACE,QAAQ,IAAI;MAChBA,QAAQ,CAACD,IAAI;MACb;MACA;IAEJ,CAAC,CAAC;EACN;AACJ;;AAEA,eAAe,IAAIQ,YAAY,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}