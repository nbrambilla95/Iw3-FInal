{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  key: 1,\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-center mb-3\"\n}, \" Lista de Choferes\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"form-inline mb-3\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"search-input\",\n  class: \"mr-2\"\n}, \"Búsqueda:\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"table table-striped table-bordered\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Chofer ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Chofer Nombre\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Chofer Apellido\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Chofer Documento\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_withDirectives(_createElementVNode(\"input\", {\n    id: \"input_token\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.token = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.token]]), !$data.requestComplete ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    id: \"id_button_choferes\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.getChoferes && $options.getChoferes(...args))\n  }, \" Get choferes \")) : _createCommentVNode(\"v-if\", true), $data.choferes.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.search = $event),\n    id: \"search-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.search]])]), _createElementVNode(\"table\", _hoisted_5, [_hoisted_6, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredChoferes, chofer => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: chofer.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(chofer.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(chofer.nombre), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(chofer.apellido), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(chofer.documento), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EAMSA,KAAK,EAAC;;gCACPC,oBAAoD;EAAhDD,KAAK,EAAC;AAAkB,GAAC,oBAAkB;;EAE1CA,KAAK,EAAC;AAAkB;gCACzBC,oBAAwD;EAAjDC,GAAG,EAAC,cAAc;EAACF,KAAK,EAAC;GAAO,WAAS;;EAI7CA,KAAK,EAAC;AAAoC;gCAC7CC,oBAKQ,6BAJJA,oBAAkB,YAAd,WAAS,gBACbA,oBAAsB,YAAlB,eAAa,gBACjBA,oBAAwB,YAApB,iBAAe,gBACnBA,oBAAyB,YAArB,kBAAgB;;;6EAlBhCA,oBAAsD;IAA/CE,EAAE,EAAC,aAAa;IAACC,IAAI,EAAC,MAAM;+DAAUC,WAAK;iDAALA,WAAK,MACUA,qBAAe,kBAA3EC,oBAES;;IAFDH,EAAE,EAAC,oBAAoB;IAAEI,OAAK,yCAAEC,qDAAW;KAA0B,gBAE7E,wCAE6BH,cAAQ,CAACI,MAAM,sBAA5CH,oBAwBM,OAxBNI,UAwBM,GAvBFC,UAAoD,EAEpDV,oBAGM,OAHNW,UAGM,GAFFC,UAAwD,kBACxDZ,oBAA6E;IAAtEG,IAAI,EAAC,MAAM;IAACJ,KAAK,EAAC,cAAc;+DAAUc,WAAM;IAAEX,EAAE,EAAC;iDAAXW,WAAM,OAG3Db,oBAeQ,SAfRc,UAeQ,GAdJC,UAKQ,EACRf,oBAOQ,mCANJK,oBAKKW,6BALgBT,yBAAgB,EAA1BU,MAAM;yBAAjBZ,oBAKK;MALyCa,GAAG,EAAED,MAAM,CAACf;QACtDF,oBAA0B,6BAAlBiB,MAAM,CAACf,EAAE,kBACjBF,oBAA8B,6BAAtBiB,MAAM,CAACE,MAAM,kBACrBnB,oBAAgC,6BAAxBiB,MAAM,CAACG,QAAQ,kBACvBpB,oBAAiC,6BAAzBiB,MAAM,CAACI,SAAS","names":["class","_createElementVNode","for","id","type","$data","_createElementBlock","onClick","$options","length","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_ctx","_hoisted_5","_hoisted_6","_Fragment","chofer","key","nombre","apellido","documento"],"sourceRoot":"","sources":["/home/nicolas/Downloads/repos/Iw3-FInal/vue-frontend/src/components/Chofer.vue"],"sourcesContent":["<template>\n    <input id=\"input_token\" type=\"text\" v-model=\"token\" />\n    <button id=\"id_button_choferes\" @click=\"getChoferes\" v-if=\"!requestComplete\">\n        Get choferes\n    </button>\n\n    <div class=\"container\" v-if=\"choferes.length > 0\">\n        <h1 class=\"text-center mb-3\"> Lista de Choferes</h1>\n\n        <div class=\"form-inline mb-3\">\n            <label for=\"search-input\" class=\"mr-2\">Búsqueda:</label>\n            <input type=\"text\" class=\"form-control\" v-model=\"search\" id=\"search-input\" />\n        </div>\n\n        <table class=\"table table-striped table-bordered\">\n            <thead>\n                <th>Chofer ID</th>\n                <th>Chofer Nombre</th>\n                <th>Chofer Apellido</th>\n                <th>Chofer Documento</th>\n            </thead>\n            <tbody>\n                <tr v-for=\"chofer in filteredChoferes\" v-bind:key=\"chofer.id\">\n                    <td> {{ chofer.id }} </td>\n                    <td> {{ chofer.nombre }} </td>\n                    <td> {{ chofer.apellido }} </td>\n                    <td> {{ chofer.documento }} </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</template>\n<script>\n\nimport ChoferService from '@/services/ChoferService';\n\nexport default {\n    name: '',\n    data() {\n        return {\n            choferes: [],\n            token: '',\n            requestComplete: false,\n        }\n    },\n    computed: {\n    async filteredChoferes() {\n        try {\n            const choferes = await ChoferService.getChoferes(this.token);\n            return choferes.filter(chofer => chofer.nombre.toLowerCase().includes(this.search.toLowerCase()));\n        } catch (error) {\n            console.error(error);\n        }\n    },\n},\n\n    methods: {\n\n        async getChoferes() {\n            try {\n                // Obtener un token llamando al método \"getTokens\" importado\n\n                // Llamar al método \"getCamiones\" del servicio de camión, pasando el token como un parámetro\n                this.choferes = await ChoferService.getChoferes(this.token);\n                this.requestComplete = true;\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    },\n    // created(){\n    //      this.getCamiones()\n    // }\n\n}\n\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}