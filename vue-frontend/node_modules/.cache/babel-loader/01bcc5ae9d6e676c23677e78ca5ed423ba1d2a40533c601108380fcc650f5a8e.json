{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"input_username\"\n}, \"Usuario: \", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"input_password\"\n}, \"Constrasenia: \", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"button\", {\n    id: \"id_button_token\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.getTokens && $options.getTokens(...args))\n  }, \"Solicitar Token\"), _hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"input_username\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.username = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]]), _hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"input_password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"label_token\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.token = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.token]])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAGQA,oBAA6C;EAAtCC,GAAG,EAAC;AAAgB,GAAC,WAAS;gCAGrCD,oBAAkD;EAA3CC,GAAG,EAAC;AAAgB,GAAC,gBAAc;;;6DAL9CD,oBAAwE;IAAhEE,EAAE,EAAC,iBAAiB;IAAEC,OAAK,yCAAEC,iDAAS;KAAE,iBAAe,GAE3DC,UAA6C,kBAC7CL,oBAA0D;IAAnDM,IAAI,EAAC,MAAM;IAACJ,EAAE,EAAC,gBAAgB;+DAAUK,cAAQ;iDAARA,cAAQ,KAExDC,UAAkD,kBAClDR,oBAA8D;IAAvDM,IAAI,EAAC,UAAU;IAACJ,EAAE,EAAC,gBAAgB;+DAAUK,cAAQ;iDAARA,cAAQ,qBAE5DP,oBAAoD;IAA7CM,IAAI,EAAC,MAAM;IAACJ,EAAE,EAAC,aAAa;+DAAUK,WAAK;iDAALA,WAAK","names":["_createElementVNode","for","id","onClick","$options","_hoisted_1","type","$data","_hoisted_2"],"sourceRoot":"","sources":["/home/nicolas/Downloads/repos/Iw3-FInal/vue-frontend/src/components/Token.vue"],"sourcesContent":["<template>\n    <button id=\"id_button_token\" @click=\"getTokens\">Solicitar Token</button>\n\n        <label for=\"input_username\">Usuario: </label>\n        <input type=\"text\" id=\"input_username\" v-model=\"username\">\n\n        <label for=\"input_password\">Constrasenia: </label>\n        <input type=\"password\" id=\"input_password\" v-model=\"password\">\n\n        <input type=\"text\" id=\"label_token\" v-model=\"token\">\n   \n</template>\n\n<script>\nimport TokenService from '@/services/TokenService';\n\n    export default{\n        name: '',\n\n        data(){\n            return {\n                username: '',\n                password: '',\n                token: ''\n            }\n        },\n        methods:{\n            getTokens(){\n                // this.token = TokenService.getTokens(this.username,this.password)\n                TokenService.getTokens(this.username,this.password)\n                this.token = TokenService.token\n            }\n        },\n\n        // created(){\n        // }\n\n    }\n\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}