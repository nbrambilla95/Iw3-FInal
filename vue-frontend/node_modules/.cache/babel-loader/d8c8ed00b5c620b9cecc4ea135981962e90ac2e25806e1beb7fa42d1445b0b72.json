{"ast":null,"code":"import OrdenService from '@/services/OrdenService';\nexport default {\n  name: '',\n  data() {\n    return {\n      ordenes: [],\n      token: '',\n      requestComplete: false,\n      filtroEstado: '' // Nueva propiedad para almacenar el valor del estado que se ingrese en la barra de búsqueda\n    };\n  },\n\n  watch: {\n    filtroEstado(nuevoValor) {\n      this.filtrarOrdenes();\n    }\n  },\n  methods: {\n    async getOrdenes() {\n      try {\n        // Obtener un token llamando al método \"getTokens\" importado\n\n        // Llamar al método \"getCamiones\" del servicio de camión, pasando el token como un parámetro\n        this.ordenes = await OrdenService.getOrdenes(this.token);\n        this.requestComplete = true;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    filtrarOrdenes() {\n      // Comprobar si se ha ingresado un valor en el campo de búsqueda\n      if (this.filtroEstado) {\n        // Filtrar la tabla utilizando el valor ingresado\n        this.ordenes = this.ordenes.filter(orden => orden.estado === this.filtroEstado);\n      } else {\n        // Si no se ha ingresado ningún valor, mostrar todas las órdenes\n        this.ordenes = this.ordenes;\n      }\n    }\n  }\n  // created(){\n  //      this.getCamiones()\n  // }\n};","map":{"version":3,"mappings":"AAwEA,OAAOA,YAAW,MAAO,yBAAyB;AAElD,eAAe;EACXC,IAAI,EAAE,EAAE;EACRC,IAAI,GAAG;IACH,OAAO;MACHC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,eAAe,EAAE,KAAK;MACtBC,YAAY,EAAE,EAAE,CAAE;IAEtB;EACJ,CAAC;;EACDC,KAAK,EAAE;IACHD,YAAY,CAACE,UAAU,EAAE;MACrB,IAAI,CAACC,cAAc,EAAE;IACzB;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,UAAU,GAAG;MACf,IAAI;QACA;;QAEA;QACA,IAAI,CAACR,OAAM,GAAI,MAAMH,YAAY,CAACW,UAAU,CAAC,IAAI,CAACP,KAAK,CAAC;QACxD,IAAI,CAACC,eAAc,GAAI,IAAI;MAC/B,EAAE,OAAOO,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC;IACDH,cAAc,GAAG;MACb;MACA,IAAI,IAAI,CAACH,YAAY,EAAE;QACnB;QACA,IAAI,CAACH,OAAM,GAAI,IAAI,CAACA,OAAO,CAACW,MAAM,CAACC,KAAI,IAAKA,KAAK,CAACC,MAAK,KAAM,IAAI,CAACV,YAAY,CAAC;MACnF,OAAO;QACH;QACA,IAAI,CAACH,OAAM,GAAI,IAAI,CAACA,OAAO;MAC/B;IACJ;EACJ;EACA;EACA;EACA;AAEJ","names":["OrdenService","name","data","ordenes","token","requestComplete","filtroEstado","watch","nuevoValor","filtrarOrdenes","methods","getOrdenes","error","console","filter","orden","estado"],"sourceRoot":"","sources":["/home/nicolas/Downloads/repos/Iw3-FInal/vue-frontend/src/components/Orden.vue"],"sourcesContent":["<template>\n\n    <input id=\"input_token\" type=\"text\" v-model=\"token\" v-if=\"!requestComplete\" />\n    <button id=\"id_button_ordenes\" @click=\"getOrdenes\" v-if=\"!requestComplete\">\n        Get ordenes\n    </button>\n    <div class=\"container\" v-if=\"ordenes.length > 0\">\n        <h1 class=\"text-center\"> Lista de Ordenes</h1>\n        Busqueda por estado:<input type=\"text\" v-model=\"filtroEstado\" />\n\n\n        <table class=\"table table-striped table-bordered\">\n            <thead>\n                <th>ID</th>\n                <th>Fecha Recepcion</th>\n                <th>Fecha Recepcion Pesaje Inicial</th>\n                <th>Fecha Fin de Carga</th>\n\n                <th>[Cliente]Razon social</th>\n                <th>[Cliente]Contacto</th>\n\n\n                <th>[Producto]Nombre</th>\n\n                <th>[Camion]Patente</th>\n\n                <th>[Camion]Cisternado</th>\n\n\n                <th>[Chofer]Nombre</th>\n                <th>[Chofer]Apellido</th>\n                <th>[Chofer]Documento</th>\n\n\n                <th>Estado de la orden</th>\n\n\n            </thead>\n            <tbody>\n                <tr v-for=\"orden in ordenes\" v-bind:key=\"orden.id\">\n                    <td> {{ orden.id }} </td>\n                    <td> {{ orden.fechaRecepcion }} </td>\n                    <td> {{ orden.fechaRecepcionPesajeInicial }} </td>\n                    <td> {{ orden.fechaFinCarga }} </td>\n\n                    <!-- <td> {{ orden.cliente }} </td> -->\n                    <td> {{ orden.cliente.razonSocial }} </td>\n                    <td> {{ orden.cliente.contacto }} </td>\n\n\n                    <td> {{ orden.producto.nombre }} </td>\n\n                    <td> {{ orden.camion.patente }} </td>\n                    <td> {{ orden.camion.cisternado }} </td>\n\n\n                    <td> {{ orden.chofer.nombre }} </td>\n                    <td> {{ orden.chofer.apellido }} </td>\n                    <td> {{ orden.chofer.documento }} </td>\n\n\n                    <td> {{ orden.estado }} </td>\n\n\n                </tr>\n            </tbody>\n        </table>\n\n    </div>\n</template>\n\n<script>\nimport OrdenService from '@/services/OrdenService';\n\nexport default {\n    name: '',\n    data() {\n        return {\n            ordenes: [],\n            token: '',\n            requestComplete: false,\n            filtroEstado: '', // Nueva propiedad para almacenar el valor del estado que se ingrese en la barra de búsqueda\n\n        }\n    },\n    watch: {\n        filtroEstado(nuevoValor) {\n            this.filtrarOrdenes();\n        }\n    },\n    methods: {\n        async getOrdenes() {\n            try {\n                // Obtener un token llamando al método \"getTokens\" importado\n\n                // Llamar al método \"getCamiones\" del servicio de camión, pasando el token como un parámetro\n                this.ordenes = await OrdenService.getOrdenes(this.token);\n                this.requestComplete = true;\n            } catch (error) {\n                console.error(error);\n            }\n        },\n        filtrarOrdenes() {\n            // Comprobar si se ha ingresado un valor en el campo de búsqueda\n            if (this.filtroEstado) {\n                // Filtrar la tabla utilizando el valor ingresado\n                this.ordenes = this.ordenes.filter(orden => orden.estado === this.filtroEstado);\n            } else {\n                // Si no se ha ingresado ningún valor, mostrar todas las órdenes\n                this.ordenes = this.ordenes;\n            }\n        }\n    },\n    // created(){\n    //      this.getCamiones()\n    // }\n\n}\n\n</script>\n\n<style>\n.container {\n    margin: 0 auto;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}