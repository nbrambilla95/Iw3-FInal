{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_Navbar), _createElementVNode(\"div\", null, [_createCommentVNode(\" Aquí se cargará el componente seleccionado en la barra de navegación \"), (_openBlock(), _createBlock(_resolveDynamicComponent($data.selectedComponent)))])]);\n}","map":{"version":3,"mappings":";;;uBACEA,oBAMM,cALJC,aAAUC,oBACVC,oBAGM,cAFJC,6FAA6E,iBAC7EC,aAA+CC,yBAA/BC,uBAAiB","names":["_createElementBlock","_createVNode","_component_Navbar","_createElementVNode","_createCommentVNode","_createBlock","_resolveDynamicComponent","$data"],"sourceRoot":"","sources":["/home/nicolas/Downloads/repos/Iw3-FInal/vue-frontend/src/components/Main_navigator.vue"],"sourcesContent":["<template>\n  <div>\n    <Navbar />\n    <div>\n      <!-- Aquí se cargará el componente seleccionado en la barra de navegación -->\n      <component :is=\"selectedComponent\"></component>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Navbar from './Navbar.vue';\nimport Component1 from './Component1.vue';\nimport Component2 from './Component2.vue';\nimport Component3 from './Component3.vue';\n\nexport default {\n  name: 'MainPage',\n  components: {\n    Navbar,\n    Component1,\n    Component2,\n    Component3,\n  },\n  data() {\n    return {\n      selectedComponent: '', // Aquí se almacenará el nombre del componente seleccionado\n    };\n  },\n  mounted() {\n    // Por defecto, se cargará el componente 1\n    this.selectedComponent = 'Component1';\n  },\n  methods: {\n    // Esta función se llamará desde la barra de navegación para cambiar el componente cargado\n    selectComponent(componentName) {\n      this.selectedComponent = componentName;\n    },\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}