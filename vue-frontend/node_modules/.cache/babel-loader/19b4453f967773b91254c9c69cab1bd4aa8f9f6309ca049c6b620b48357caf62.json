{"ast":null,"code":"import { vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  key: 3,\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-center\"\n}, \" Lista de Ordenes\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"table table-striped table-bordered\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Fecha Recepcion\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Fecha Recepcion Pesaje Inicial\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Fecha Fin de Carga\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"[Cliente]Razon social\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"[Cliente]Contacto\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"[Producto]Nombre\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"[Camion]Patente\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"[Camion]Cisternado\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"[Chofer]Nombre\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"[Chofer]Apellido\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"[Chofer]Documento\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Estado de la orden\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [!$data.requestComplete ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 0,\n    id: \"input_token\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.token = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.token]]) : _createCommentVNode(\"v-if\", true), !$data.requestComplete ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    id: \"id_button_ordenes\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.getOrdenes && $options.getOrdenes(...args))\n  }, \" Get ordenes \")) : _createCommentVNode(\"v-if\", true), !$data.requestComplete ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    id: \"id_button_ordenesById\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.getOrdenesById && $options.getOrdenesById(...args))\n  }, \" Get ordenes \")) : _createCommentVNode(\"v-if\", true), $data.ordenes.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.ordenes, orden => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: orden.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(orden.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(orden.fechaRecepcion), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(orden.fechaRecepcionPesajeInicial), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(orden.fechaFinCarga), 1 /* TEXT */), _createCommentVNode(\" <td> {{ orden.cliente }} </td> \"), _createElementVNode(\"td\", null, _toDisplayString(orden.cliente.razonSocial), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(orden.cliente.contacto), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(orden.producto.nombre), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(orden.camion.patente), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(orden.camion.cisternado), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(orden.chofer.nombre), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(orden.chofer.apellido), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(orden.chofer.documento), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(orden.estado), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EASSA,KAAK,EAAC;;gCACPC,oBAA8C;EAA1CD,KAAK,EAAC;AAAa,GAAC,mBAAiB;;EAElCA,KAAK,EAAC;AAAoC;gCAC7CC,oBAyBQ,6BAxBJA,oBAAW,YAAP,IAAE,gBACNA,oBAAwB,YAApB,iBAAe,gBACnBA,oBAAuC,YAAnC,gCAA8B,gBAClCA,oBAA2B,YAAvB,oBAAkB,gBAEtBA,oBAA8B,YAA1B,uBAAqB,gBACzBA,oBAA0B,YAAtB,mBAAiB,gBAGrBA,oBAAyB,YAArB,kBAAgB,gBAEpBA,oBAAwB,YAApB,iBAAe,gBAEnBA,oBAA2B,YAAvB,oBAAkB,gBAGtBA,oBAAuB,YAAnB,gBAAc,gBAClBA,oBAAyB,YAArB,kBAAgB,gBACpBA,oBAA0B,YAAtB,mBAAiB,gBAGrBA,oBAA2B,YAAvB,oBAAkB;;;8DAjCyBC,qBAAe,kCAA1EC,oBAA8E;;IAAvEC,EAAE,EAAC,aAAa;IAACC,IAAI,EAAC,MAAM;+DAAUH,WAAK;kDAALA,WAAK,0CACQA,qBAAe,kBAAzEC,oBAES;;IAFDC,EAAE,EAAC,mBAAmB;IAAEE,OAAK,yCAAEC,mDAAU;KAA0B,eAE3E,yCACkEL,qBAAe,kBAAjFC,oBAES;;IAFDC,EAAE,EAAC,uBAAuB;IAAEE,OAAK,yCAAEC,2DAAc;KAA0B,eAEnF,wCAC6BL,aAAO,CAACM,MAAM,sBAA3CL,oBA4DM,OA5DNM,UA4DM,GA3DFC,UAA8C,EAE9CT,oBAuDQ,SAvDRU,UAuDQ,GAtDJC,UAyBQ,EACRX,oBA2BQ,mCA1BJE,oBAyBKU,6BAzBeX,aAAO,EAAhBY,KAAK;yBAAhBX,oBAyBK;MAzB+BY,GAAG,EAAED,KAAK,CAACV;QAC3CH,oBAAyB,6BAAjBa,KAAK,CAACV,EAAE,kBAChBH,oBAAqC,6BAA7Ba,KAAK,CAACE,cAAc,kBAC5Bf,oBAAkD,6BAA1Ca,KAAK,CAACG,2BAA2B,kBACzChB,oBAAoC,6BAA5Ba,KAAK,CAACI,aAAa,kBAE3BC,uDAAuC,EACvClB,oBAA0C,6BAAlCa,KAAK,CAACM,OAAO,CAACC,WAAW,kBACjCpB,oBAAuC,6BAA/Ba,KAAK,CAACM,OAAO,CAACE,QAAQ,kBAG9BrB,oBAAsC,6BAA9Ba,KAAK,CAACS,QAAQ,CAACC,MAAM,kBAE7BvB,oBAAqC,6BAA7Ba,KAAK,CAACW,MAAM,CAACC,OAAO,kBAC5BzB,oBAAwC,6BAAhCa,KAAK,CAACW,MAAM,CAACE,UAAU,kBAG/B1B,oBAAoC,6BAA5Ba,KAAK,CAACc,MAAM,CAACJ,MAAM,kBAC3BvB,oBAAsC,6BAA9Ba,KAAK,CAACc,MAAM,CAACC,QAAQ,kBAC7B5B,oBAAuC,6BAA/Ba,KAAK,CAACc,MAAM,CAACE,SAAS,kBAG9B7B,oBAA6B,6BAArBa,KAAK,CAACiB,MAAM","names":["class","_createElementVNode","$data","_createElementBlock","id","type","onClick","$options","length","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","orden","key","fechaRecepcion","fechaRecepcionPesajeInicial","fechaFinCarga","_createCommentVNode","cliente","razonSocial","contacto","producto","nombre","camion","patente","cisternado","chofer","apellido","documento","estado"],"sourceRoot":"","sources":["/home/nicolas/Downloads/repos/Iw3-FInal/vue-frontend/src/components/Orden.vue"],"sourcesContent":["<template>\n\n    <input id=\"input_token\" type=\"text\" v-model=\"token\" v-if=\"!requestComplete\" />\n    <button id=\"id_button_ordenes\" @click=\"getOrdenes\" v-if=\"!requestComplete\">\n        Get ordenes\n    </button>\n    <button id=\"id_button_ordenesById\" @click=\"getOrdenesById\" v-if=\"!requestComplete\">\n        Get ordenes\n    </button>\n    <div class=\"container\" v-if=\"ordenes.length > 0\">\n        <h1 class=\"text-center\"> Lista de Ordenes</h1>\n\n        <table class=\"table table-striped table-bordered\">\n            <thead>\n                <th>ID</th>\n                <th>Fecha Recepcion</th>\n                <th>Fecha Recepcion Pesaje Inicial</th>\n                <th>Fecha Fin de Carga</th>\n\n                <th>[Cliente]Razon social</th>\n                <th>[Cliente]Contacto</th>\n\n\n                <th>[Producto]Nombre</th>\n\n                <th>[Camion]Patente</th>\n\n                <th>[Camion]Cisternado</th>\n\n\n                <th>[Chofer]Nombre</th>\n                <th>[Chofer]Apellido</th>\n                <th>[Chofer]Documento</th>\n\n\n                <th>Estado de la orden</th>\n\n\n            </thead>\n            <tbody>\n                <tr v-for=\"orden in ordenes\" v-bind:key=\"orden.id\">\n                    <td> {{ orden.id }} </td>\n                    <td> {{ orden.fechaRecepcion }} </td>\n                    <td> {{ orden.fechaRecepcionPesajeInicial }} </td>\n                    <td> {{ orden.fechaFinCarga }} </td>\n\n                    <!-- <td> {{ orden.cliente }} </td> -->\n                    <td> {{ orden.cliente.razonSocial }} </td>\n                    <td> {{ orden.cliente.contacto }} </td>\n\n\n                    <td> {{ orden.producto.nombre }} </td>\n\n                    <td> {{ orden.camion.patente }} </td>\n                    <td> {{ orden.camion.cisternado }} </td>\n\n\n                    <td> {{ orden.chofer.nombre }} </td>\n                    <td> {{ orden.chofer.apellido }} </td>\n                    <td> {{ orden.chofer.documento }} </td>\n\n\n                    <td> {{ orden.estado }} </td>\n\n\n                </tr>\n            </tbody>\n        </table>\n\n    </div>\n</template>\n\n<script>\nimport OrdenService from '@/services/OrdenService';\n\nexport default {\n    name: '',\n    data() {\n        return {\n            ordenes: [],\n            token: '',\n            requestComplete: false,\n            id:'',\n\n        }\n    },\n    methods: {\n        async getOrdenes() {\n            try {\n                // Obtener un token llamando al método \"getTokens\" importado\n\n                // Llamar al método \"getCamiones\" del servicio de camión, pasando el token como un parámetro\n                this.ordenes = await OrdenService.getOrdenes(this.token);\n                this.requestComplete = true;\n            } catch (error) {\n                console.error(error);\n            }\n        },\n        async getOrdenesById(id) {\n            try {\n                // Obtener un token llamando al método \"getTokens\" importado\n\n                // Llamar al método \"getOrdenesById\" del servicio de orden, pasando el id y el token como parámetros\n                this.orden = await OrdenService.getOrdenesById(id, this.token);\n                this.requestComplete = true;\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    },\n    // created(){\n    //      this.getCamiones()\n    // }\n\n}\n\n</script>\n\n<style>\n.container {\n    margin: 0 auto;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}