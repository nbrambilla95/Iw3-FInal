{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"input\", null, null, -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0,\n  class: \"container\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-center\"\n}, \" Lista de Camiones\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"table table-striped\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Camion ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Camion Patente\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Camion Descripcion\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Camion Cisternado\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createTextVNode(\" { token } \"), $data.camiones.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"table\", _hoisted_4, [_hoisted_5, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.camiones, camion => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: camion.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(camion.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(camion.patente), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(camion.descripcion), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(camion.cisternado), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACIA,oBAAO;;;EACFC,KAAK,EAAC;;gCACPD,oBAA+C;EAA3CC,KAAK,EAAC;AAAa,GAAC,oBAAkB;;EACnCA,KAAK,EAAC;AAAqB;gCAC9BD,oBAKQ,6BAJJA,oBAAkB,YAAd,WAAS,gBACbA,oBAAuB,YAAnB,gBAAc,gBAClBA,oBAA2B,YAAvB,oBAAkB,gBACtBA,oBAA0B,YAAtB,mBAAiB;;;6DARjCE,UAAO,gCACP,GAA6BC,cAAQ,CAACC,MAAM,sBAA5CC,oBAmBM,OAnBNC,UAmBM,GAlBFC,UAA+C,EAC/CP,oBAeQ,SAfRQ,UAeQ,GAdJC,UAKQ,EACRT,oBAOQ,mCANJK,oBAKKK,6BALgBP,cAAQ,EAAlBQ,MAAM;yBAAjBN,oBAKK;MALiCO,GAAG,EAAED,MAAM,CAACE;QAC9Cb,oBAA0B,6BAAlBW,MAAM,CAACE,EAAE,kBACjBb,oBAA+B,6BAAvBW,MAAM,CAACG,OAAO,kBACtBd,oBAAmC,6BAA3BW,MAAM,CAACI,WAAW,kBAC1Bf,oBAAkC,6BAA1BW,MAAM,CAACK,UAAU","names":["_createElementVNode","class","_hoisted_1","$data","length","_createElementBlock","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_Fragment","camion","key","id","patente","descripcion","cisternado"],"sourceRoot":"","sources":["/home/nicolas/Downloads/repos/Iw3-FInal/vue-frontend/src/components/Camion.vue"],"sourcesContent":["<template>\n    <input>  { token }  \n    <div class=\"container\" v-if=\"camiones.length > 0\">\n        <h1 class=\"text-center\"> Lista de Camiones</h1>\n        <table class=\"table table-striped\">\n            <thead>\n                <th>Camion ID</th>\n                <th>Camion Patente</th>\n                <th>Camion Descripcion</th>\n                <th>Camion Cisternado</th>\n            </thead>\n            <tbody>\n                <tr v-for=\"camion in camiones\" v-bind:key=\"camion.id\">\n                    <td> {{ camion.id }} </td>\n                    <td> {{ camion.patente }} </td>\n                    <td> {{ camion.descripcion }} </td>\n                    <td> {{ camion.cisternado }} </td>\n                </tr>\n            </tbody>\n        </table>\n\n    </div>\n</template>\n\n<script>\nimport CamionService from '@/services/CamionService';\n\n// Importar la clase Token\nimport LoginService from '@/services/LoginService';\n\nexport default {\n    name: '',\n\n    data() {\n        return {\n            camiones: [],\n            token: ''\n        };\n    },\n    methods: {\n        async getCamiones() {\n            try {\n                // Obtener un token llamando al método \"getTokens\" importado\n\n                // Llamar al método \"getCamiones\" del servicio de camión, pasando el token como un parámetro\n                const camiones = await CamionService.getCamiones(this.token);\n                this.camiones = camiones;\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    }\n};\n    // created(){\n    //      this.getCamiones()\n    // }\n\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}